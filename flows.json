[
    {
        "id": "98134dc27988aaee",
        "type": "tab",
        "label": "LINE 訊息回覆",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7869048476b3fc65",
        "type": "junction",
        "z": "98134dc27988aaee",
        "x": 1320,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "153dca1fc08fadbe",
        "type": "http in",
        "z": "98134dc27988aaee",
        "name": "監聽LINE ",
        "url": "/line_hook",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "bbb4dab0c25010e7"
            ]
        ]
    },
    {
        "id": "390c0602fa3e523e",
        "type": "debug",
        "z": "98134dc27988aaee",
        "name": "Messaging API 原始輸入",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "0d4ebcd4a9de581f",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "擷取資訊",
        "func": "let data = {};\nif (msg.payload.events[0] == undefined){\n    return;\n}\n\nlet apiData = msg.payload.events[0];\n\nif (apiData.type == \"message\"){\n    data.replyToken = apiData.replyToken;\n    data.msgType = apiData.message.type;\n    data.source = apiData.source.type;\n    data.userId = apiData.source.userId;\n\n    if (data.source == \"group\"){\n        data.groupId = apiData.source.groupId;\n    }\n\n    switch (data.msgType){\n        case \"text\":\n            data.query = apiData.message.text;\n        case \"image\":\n            data.imageId = apiData.message.id;\n    }\n}\nmsg.data = data;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 540,
        "wires": [
            [
                "77782297026a2d6c",
                "6f3c4370d1f46940"
            ]
        ]
    },
    {
        "id": "77782297026a2d6c",
        "type": "debug",
        "z": "98134dc27988aaee",
        "name": "擷取的資訊",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "dc29a6294a83159a",
        "type": "http response",
        "z": "98134dc27988aaee",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "6f3c4370d1f46940",
        "type": "switch",
        "z": "98134dc27988aaee",
        "name": "訊息類型",
        "property": "data.msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "text",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 540,
        "wires": [
            [
                "791355f27b03e05c"
            ],
            [
                "4ac82917d127596a"
            ]
        ]
    },
    {
        "id": "47caebfdb8682256",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "傳送信息",
        "func": "let channelAccessToken = \"q5QZRPntU/T/BpmuRZLuamwsqd8OqRtgwwwSBo65QVVBZdglbE8IEphTsWrgWN2qvZ16ScXbmuMgUHmpE5Vv84XnXQteYZ7fpfI+7/bQMhrg7hqcuqTW3AYzuPQLMV/FE/1WkXdBSqgQNtI60gSB3gdB04t89/1O/w1cDnyilFU=\";\n\nlet message = {\n    type:'text',\n    text: `${msg.data.replyMsg}`\n};\n\nlet headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'Authorization': 'Bearer ' + channelAccessToken,\n};\nlet payload = {\n    \"replyToken\": msg.data.replyToken,\n    'messages': [message]\n};\nmsg.headers = headers;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 620,
        "wires": [
            [
                "5b26e3031a116f92"
            ]
        ]
    },
    {
        "id": "5b26e3031a116f92",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "Messaging API 傳送",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.line.me/v2/bot/message/reply",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2400,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "06a7a299ab6009bd",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "Messaging API 取得圖片",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1690,
        "y": 620,
        "wires": [
            [
                "12e43af8a9321f2a"
            ]
        ]
    },
    {
        "id": "4ac82917d127596a",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "準備查詢圖片請求",
        "func": "let channelAccessToken = 'q5QZRPntU/T/BpmuRZLuamwsqd8OqRtgwwwSBo65QVVBZdglbE8IEphTsWrgWN2qvZ16ScXbmuMgUHmpE5Vv84XnXQteYZ7fpfI+7/bQMhrg7hqcuqTW3AYzuPQLMV/FE/1WkXdBSqgQNtI60gSB3gdB04t89/1O/w1cDnyilFU=';\n\nmsg.url = `https://api-data.line.me/v2/bot/message/${msg.data.imageId}/content`\nmsg.method = \"GET\";\n\nmsg.headers = { \n    \"Authorization\": `Bearer ${channelAccessToken}`, \n    \"Content-Type\": \"application/json\" \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 620,
        "wires": [
            [
                "06a7a299ab6009bd"
            ]
        ]
    },
    {
        "id": "12e43af8a9321f2a",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "設定回覆訊息-image",
        "func": "msg.data.replyMsg = `已經取得你上傳的圖片\\n imageId: ${msg.data.imageId}`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 620,
        "wires": [
            [
                "47caebfdb8682256"
            ]
        ]
    },
    {
        "id": "d71f83e9bf2c2ff0",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "Check ID decide",
        "func": "const baseUrl = global.get(\"gas_url\");\nlet text = msg.payload?.text || msg.query || msg.data?.query || \"\";\n\n// 取出前面節點傳來的身分證號\nconst idNumber = text.trim().split(/[:：\\s ]/)[1];\n\nif (!baseUrl) {\n    node.error(\"⚠️ global.gas_url 尚未設定，請先執行初始化節點\");\n    return null;\n}\n\nif (!idNumber) {\n    node.error(\"❌ 沒有接收到身分證號\");\n    return null;\n}\n\n// 組成 Google Script 查詢 URL\nmsg.method = \"GET\";\nmsg.url = `${baseUrl}?id=${encodeURIComponent(idNumber)}`;\n\nnode.warn(`🔍 查詢身分證號：${idNumber}`);\nreturn msg;\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 200,
        "wires": [
            [
                "84f57caedae871dd"
            ],
            [
                "a902c61433ea3c11"
            ]
        ]
    },
    {
        "id": "84f57caedae871dd",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "查詢 Google Script API",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1880,
        "y": 200,
        "wires": [
            [
                "ae6f7cf6751ae8a3"
            ]
        ]
    },
    {
        "id": "ae6f7cf6751ae8a3",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "Format Reply",
        "func": "let data = JSON.parse(msg.payload);\nif (data.exists) {\n    msg.data.replyMsg = `✅ 已找到在總表的資料：\n    姓名：${data.name}\n    電話：${data.phone}\n    性別：${data.gender}\n    餐別：${data.meal}\n    群組：${data.group}\n    地址：${data.city}${data.district}${data.address}`;\n} else {\n    msg.data.replyMsg = `❌ 沒有查到你之前的報名資料，請重新輸入正確的身分證字號。`;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 180,
        "wires": [
            [
                "a902c61433ea3c11"
            ]
        ]
    },
    {
        "id": "63895d0c82b07973",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "Messaging API 傳送",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.line.me/v2/bot/message/reply",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2940,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a902c61433ea3c11",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "傳送信息",
        "func": "let channelAccessToken = \"q5QZRPntU/T/BpmuRZLuamwsqd8OqRtgwwwSBo65QVVBZdglbE8IEphTsWrgWN2qvZ16ScXbmuMgUHmpE5Vv84XnXQteYZ7fpfI+7/bQMhrg7hqcuqTW3AYzuPQLMV/FE/1WkXdBSqgQNtI60gSB3gdB04t89/1O/w1cDnyilFU=\";\n\nlet message = {\n    type:'text',\n    text: `${msg.data.replyMsg}`\n};\n\nlet headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'Authorization': 'Bearer ' + channelAccessToken,\n};\nlet payload = {\n    \"replyToken\": msg.data.replyToken,\n    'messages': [message]\n};\nmsg.headers = headers;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 560,
        "wires": [
            [
                "63895d0c82b07973"
            ]
        ]
    },
    {
        "id": "791355f27b03e05c",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "判斷需求",
        "func": "let text = msg.data.query.trim();\nlet prefix = text.split(/[:：\\s]/)[0]; // 取出冒號或空白前的文字\nmsg.prefix = prefix; // 額外儲存\n\nif (prefix === \"新增\") {\n    msg.topic = \"add\";\n    return [msg, null, null, null];\n} else if (prefix === \"查詢\") {\n    msg.topic = \"query\";\n    return [null, msg, null, null];\n} else if (prefix === \"報名\") {\n    msg.topic = \"register\";\n    return [null, null, msg, null];   \n} else {\n    msg.topic = \"other\";\n    return [null, null, null, msg];\n}\n\nreturn msg;\n",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 220,
        "wires": [
            [
                "2853d457b24c8c6d"
            ],
            [
                "d71f83e9bf2c2ff0"
            ],
            [
                "0d993ccc56430ee6"
            ],
            [
                "e04ef3be16c08c61"
            ]
        ]
    },
    {
        "id": "e04ef3be16c08c61",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "設定回覆訊息-text",
        "func": "msg.data.replyMsg = `你好啊，可以告訴身分證字號\n我來查查看總表內有沒有建立過資料😉\\n\n請問你的需求是查詢還是新增、報名?\n\n【報名】請輸入 \"報名\"+\"空格\"+\"出發時間\"+\"空格\"+\"身分證\"  \n提醒：報名前請先查詢看看有沒有身分證\n\n【查詢】請輸入 \"查詢\"+\"空格\"+\"身分證\"\n\n【新增】請複製以下格式輸入 \n\n新增 \n　姓名：王小明\n　性別：男\n　身分證：A123456789\n　生日：99.04.21\n　電話：0912345678\n　飲食習慣：葷\n　群組(誰的朋友)：宮生\n　地址：新北市/新莊區/幸福路1號`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 500,
        "wires": [
            [
                "a902c61433ea3c11"
            ]
        ]
    },
    {
        "id": "2853d457b24c8c6d",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "F1_解析報名文字",
        "func": "// 1) 取得原始文字（依你實際來源擇一）\nlet text = msg.payload?.text || msg.data?.query || msg.query || \"\";\ntext = text.trim();\n\n// 2) 移除「新增」與全形空白、統一冒號\ntext = text.replace(/^新增[\\s　]*/i, \"\");\ntext = text.replace(/：/g, \":\").replace(/\\r?\\n+/g, \"\\n\");\n\n// 3) 逐行解析\nlet lines = text.split(\"\\n\").map(s => s.replace(/　/g, \"\").trim()).filter(Boolean);\nlet data = {};\nfor (let line of lines) {\n    if (/^姓名/i.test(line)) data.name = line.split(\":\")[1]?.trim();\n    else if (/^性別/i.test(line)) data.gender = line.split(\":\")[1]?.trim();\n    else if (/^身分證/i.test(line)) data.idNumber = line.split(\":\")[1]?.trim().toUpperCase();\n    else if (/^生日/i.test(line)) data.birthday = line.split(\":\")[1]?.trim(); // 99.04.21\n    else if (/^電話/i.test(line)) data.phone = line.split(\":\")[1]?.trim();\n    else if (/^(飲食|飲食習慣)/i.test(line)) data.meal = line.split(\":\")[1]?.trim(); // 葷/素\n    else if (/^群組/i.test(line)) data.group = line.split(\":\")[1]?.trim();\n    else if (/^地址/i.test(line)) {\n        const addr = line.split(\":\")[1]?.trim() || \"\";\n        const parts = addr.split(/[\\/／]/);\n        data.city = (parts[0] || \"\").trim();    // 縣市 → J\n        data.district = (parts[1] || \"\").trim();    // 鄉鎮市區 → K\n        data.address = (parts[2] || \"\").trim();    // 路名 → M（L 區號暫留空）\n    }\n}\n\n// 4) 基本檢核：身分證格式 + 必填\nlet id = data.idNumber || \"\";\nlet pattern = /^[A-Z][12]\\d{8}$/; // 台灣身分證\nif (!data.name || !pattern.test(id)) {\n    msg.data = msg.data || {};\n    msg.data.replyMsg = \"❌ 資料不完整或身分證格式錯誤。\\n請依下列格式輸入：\\n新增 姓名：王小明…\";\n    return [null, msg]; // 第二輸出：回覆錯誤\n}\n\n// 5) 將整理好的資料放到 msg.payload 供下一步使用\nmsg.payload = {\n    name: data.name,\n    gender: data.gender,\n    idNumber: data.idNumber,\n    birthday: data.birthday,\n    phone: data.phone,\n    meal: data.meal,\n    group: data.group,\n    city: data.city || \"\",\n    district: data.district || \"\",\n    address: data.address || \"\",\n    note: \"\" // 如要開放可再解析\n};\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 140,
        "wires": [
            [
                "350853f23c5aaf27"
            ]
        ]
    },
    {
        "id": "22dd36d8f1cf9211",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "查詢 Google Script API",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1880,
        "y": 140,
        "wires": [
            [
                "47a050455ea3ba55"
            ]
        ]
    },
    {
        "id": "bbb4dab0c25010e7",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "function 1",
        "func": "global.set(\"gas_url\", \"https://script.google.com/macros/s/AKfycbx24sLy38OPSIH_08a2kFnO7NVkOZIyr-eM4rhmin4I3ZpL_o78u_-Sd1mCSGLQVpkI/exec\");\n\nnode.warn(\"✅ GAS URL 已設定完成\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "390c0602fa3e523e",
                "dc29a6294a83159a",
                "0d4ebcd4a9de581f"
            ]
        ]
    },
    {
        "id": "47a050455ea3ba55",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "傳送啥呢？",
        "func": "msg.data.replyMsg = \"成功了！記得找時間打開你的總表看看😁\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 120,
        "wires": [
            [
                "a902c61433ea3c11"
            ]
        ]
    },
    {
        "id": "350853f23c5aaf27",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "F2_組POST請求",
        "func": "// ✅ 直接抓 payload，不要抓 newEntry\nconst data = msg.payload;\n\nif (!data || !data.name) {\n    node.error(\"❌ 無法讀取報名資料，請檢查\", msg);\n    return null;\n}\n\nmsg.method = \"POST\";\nmsg.url = global.get(\"gas_url\");\nmsg.headers = { \"Content-Type\": \"application/json\" };\n\nmsg.payload = {\n    name: data.name,\n    gender: data.gender,\n    idNumber: data.idNumber,\n    birthday: data.birthday,\n    phone: data.phone,\n    meal: data.meal,\n    group: data.group,\n    city: data.city,\n    district: data.district,\n    address: data.address,\n    note: \"\"\n};\n\nnode.warn(\"📤 傳送資料至 GAS：\" + JSON.stringify(msg.payload));\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 40,
        "wires": [
            [
                "22dd36d8f1cf9211"
            ]
        ]
    },
    {
        "id": "0d993ccc56430ee6",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "F1_解析報名文字",
        "func": "// === 1) 取得原始文字 ===\nlet text = msg.payload?.text || msg.data?.query || msg.query || \"\";\ntext = text.trim();\n\n// === 2) 解析格式：報名 [表名] [身分證] ===\nconst match = text.match(/^報名[\\s　]+(\\S+)[\\s　]+([A-Z]\\d{9})$/i);\nif (!match) {\n    msg.data = msg.data || {};\n    msg.data.replyMsg = \"⚠️ 請輸入正確格式：\\n報名 2025.11 A123456789\";\n    return [null, msg]; // 第二輸出：錯誤訊息\n}\n\n// === 3) 抽取資料 ===\nlet sheetName = match[1];\nlet idNumber = match[2].toUpperCase();\n\n// === 4) 驗證身分證 ===\nconst pattern = /^[A-Z][12]\\d{8}$/;\nif (!pattern.test(idNumber)) {\n    msg.data = msg.data || {};\n    msg.data.replyMsg = \"❌ 身分證格式錯誤，請確認後再試。\";\n    return [null, msg];\n}\n\n// === 5) 打包到 payload 供下一步使用 ===\nmsg.payload = {\n    sheetName,\n    idNumber\n};\n\n// 給下一個 node（F2_組POST請求）\nreturn [msg, null];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 280,
        "wires": [
            [
                "4143ba9bd319f73e"
            ]
        ]
    },
    {
        "id": "7f55db79473862ce",
        "type": "http request",
        "z": "98134dc27988aaee",
        "name": "查詢 Google Script API",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2000,
        "y": 460,
        "wires": [
            [
                "1e67c898553d729e"
            ]
        ]
    },
    {
        "id": "1e67c898553d729e",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "傳送啥呢？",
        "func": "msg.data.replyMsg = \"成功了！記得找時間打開你的總表看看😁\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 480,
        "wires": [
            [
                "a902c61433ea3c11"
            ]
        ]
    },
    {
        "id": "4143ba9bd319f73e",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "F2_組POST請求",
        "func": "msg.method = \"POST\";\nmsg.url = global.get(\"gas_url\");\nmsg.headers = { \"Content-Type\": \"application/json\" };\nmsg.payload = {\n    sheetName: msg.payload.sheetName,\n    idNumber: msg.payload.idNumber\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 360,
        "wires": [
            [
                "7f55db79473862ce"
            ]
        ]
    },
    {
        "id": "init_starttime_inject",
        "type": "inject",
        "z": "98134dc27988aaee",
        "name": "init uptime",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 740,
        "wires": [
            [
                "set_starttime_fn"
            ]
        ]
    },
    {
        "id": "set_starttime_fn",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "set startTime",
        "func": "global.set('startTime', new Date().getTime());\nnode.log('🕒 startTime initialized');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "health_http_in",
        "type": "http in",
        "z": "98134dc27988aaee",
        "name": "健康檢查端點",
        "url": "/health",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "health_fn"
            ]
        ]
    },
    {
        "id": "health_fn",
        "type": "function",
        "z": "98134dc27988aaee",
        "name": "function/health",
        "func": "const startTime = global.get('startTime') || new Date().getTime();\nconst uptime = ((new Date().getTime() - startTime) / 1000).toFixed(1);\n\nmsg.payload = {\n  status: 'ok',\n  uptime: uptime,\n  time: new Date().toISOString()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 880,
        "wires": [
            [
                "health_http_response"
            ]
        ]
    },
    {
        "id": "health_http_response",
        "type": "http response",
        "z": "98134dc27988aaee",
        "name": "回傳 200 OK",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 630,
        "y": 880,
        "wires": []
    }
]
